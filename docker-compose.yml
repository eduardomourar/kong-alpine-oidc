version: '3.4'

networks: 
  kong-net:

volumes:
  kong-ce-datastore:
    driver: local
    driver_opts:
      type: none
      device: $HOME/projects/docker/kong-ce
      o: bind

services:
  # kong-migrations:
  #   image: eduardomourar/kong-alpine-oidc:latest
  #   command: kong migrations up #kong migrations bootstrap
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_SSL: 'on'
  #     KONG_PG_DATABASE: ${POSTGRES_DB:-kongce}
  #     KONG_PG_HOST: ${POSTGRES_HOST:-db}
  #     KONG_PG_USER: ${POSTGRES_USER:-kong}
  #     KONG_PG_PASSWORD: ${POSTGRES_PASSWORD:-kong}
  #   networks:
  #     - kong-net

  kong-ce:
    build:
      context: .
    image: eduardomourar/kong-alpine-oidc:latest
    networks:
      - kong-net
    ports:
      - '8000:8000' # Listener
      - '8001:8001' # Admin API
    environment:
      KONG_DATABASE: postgres
      KONG_PG_SSL: 'on'
      KONG_PG_DATABASE: ${POSTGRES_DB:-kongce}
      KONG_PG_HOST: ${POSTGRES_HOST:-db}
      KONG_PG_USER: ${POSTGRES_USER:-kong}
      KONG_PG_PASSWORD: ${POSTGRES_PASSWORD:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_LOG_LEVEL: debug
      KONG_PLUGINS: 'bundled,oidc,azure-functions,aws-lambda'
    restart: on-failure

  konga:
    image: pantsel/konga:0.14.1
    depends_on:
      - kong-ce
    networks:
      - kong-net
    ports:
      - '1337:1337' # konga
    environment:
      DB_ADAPTER: postgres
      DB_DATABASE: kongadb
      DB_HOST: ${POSTGRES_HOST:-db}
      DB_USER: ${POSTGRES_USER:-kong}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-kong}
      DB_SSL: 'true'
      KONGA_LOG_LEVEL: debug
      NODE_ENV: development
    restart: on-failure
